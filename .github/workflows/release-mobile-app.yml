name: Deploy android release

on:
  push:
    tags:
      - "android-*"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_APK: release-android-app-latest
  IMAGE_NAME_IOS: release-ios-app-latest

jobs:
  quality-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [17.x]
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: cd ./apps/mobile-app
      - run: npm ci
      - run: npm run lint
      - run: echo "🍏 lint is ${{ job.status }}."

  unit-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [17.x]
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: cd ./apps/mobile-app
      - run: npm ci
      - run: npm run test:unit
      - run: echo "🍏 test is ${{ job.status }}."

  release-apk:
    name: Upload Release APK
    runs-on: ubuntu-latest
    needs: [quality-check, unit-test]
    strategy:
      matrix:
        service: ["android"]
    steps:
      - name: init tag prefix
        run: echo "TAG_PREFIX=refs/tags/${{ matrix.service }}-" >> $GITHUB_ENV
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}-app
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./releases/ionic-release.apk
          asset_name: ${{ env.IMAGE_NAME_APK }}.apk
          asset_content_type: application/zip
