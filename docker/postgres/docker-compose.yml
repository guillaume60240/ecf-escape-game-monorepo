services:
  postgres:
    image: postgres:latest
    command: ['postgres', '-c', 'log_statement=all']
    container_name: ecf-postgres
    ## uncomment the following to display logs
    # command: ["postgres", "-c", "log_statement=all"]
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'pg_isready --quiet -U postgres -d escape_game_postgres',
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./schema/public:/docker-entrypoint-initdb.d/public:ro
      - ./schema/user-manager:/docker-entrypoint-initdb.d/user-manager:ro
      - ./schema/game-manager:/docker-entrypoint-initdb.d/game-manager:ro
      - ./schema/reservation-manager:/docker-entrypoint-initdb.d/reservation-manager:ro
      - ./schema/scenario-manager:/docker-entrypoint-initdb.d/scenario-manager:ro
      - ./init.sh:/docker-entrypoint-initdb.d/init.sh:ro

    ## uncomment the following to persist data
    #  - postgres-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    env_file:
      - postgres.env

  pg-admin:
    container_name: ecf-pg-admin
    image: dpage/pgadmin4:latest
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--quiet',
          '--tries=1',
          '--spider',
          'http://localhost:80/misc/ping',
        ]
    volumes:
      - ./pgadmin.servers.json:/pgadmin4/servers.json:ro
      - ./pgadmin.pgpass:/pgadmin4/pgpass:ro
    ports:
      - 5050:80
    env_file:
      - pg-admin.env
## uncomment the following to persist data
#volumes:
#  postgres-data:
